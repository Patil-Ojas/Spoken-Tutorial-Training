
In [14]: from numpy import asmatrix, arange

In [16]: a = asmatrix(arange(1, 10).reshape(3, 3))

In [17]: a
Out[17]:
matrix([[1, 2, 3],
        [4, 5, 6],
        [7, 8, 9]])

In [18]: a.flatten()
Out[18]: matrix([[1, 2, 3, 4, 5, 6, 7, 8, 9]])

In [19]: m = asmatrix(arange(1, 17).reshape(4, 4))

In [20]: m[0, 1] = 0

In [21]: m[1, 3] = 0

In [22]: m
Out[22]:
matrix([[ 1,  0,  3,  4],
        [ 5,  6,  7,  0],
        [ 9, 10, 11, 12],
        [13, 14, 15, 16]])

In [24]: from numpy.linalg import inv, norm

In [25]: im = inv(m)

In [26]: norm(im)
Out[26]: 3.7059917700933944

Find infinity norm of of matrix im
In [24]: from numpy.linalg import inv, norm

In [25]: im = inv(m)

In [26]: norm(im)
Out[26]: 3.7059917700933944

Singular value decomposition
In [31]: from numpy import matrix

In [32]: from numpy.linalg import svd

In [33]: m1 = matrix([[3, 2, 2], [2, 3, -2]])

In [34]: U, sigma, V_conjugate = svd(m1)

In [35]: U
Out[35]:
matrix([[-0.70710678, -0.70710678],
        [-0.70710678,  0.70710678]])

In [36]: sigma
Out[36]: array([5., 3.])

In [37]: V_conjugate
Out[37]:
matrix([[-7.07106781e-01, -7.07106781e-01, -6.47932334e-17],
        [-2.35702260e-01,  2.35702260e-01, -9.42809042e-01],
        [-6.66666667e-01,  6.66666667e-01,  3.33333333e-01]])

In [38]: from numpy import diag, allclose

In [39]: from numpy.matlib import zeros

In [40]: smat = zeros((2, 3))

In [41]: smat
Out[41]:
matrix([[0., 0., 0.],
        [0., 0., 0.]])

In [42]: smat[:2, :2] = diag(sigma)

In [43]: smat
Out[43]:
matrix([[5., 0., 0.],
        [0., 3., 0.]])

In [44]: allclose(m1, U * smat * V_conjugate)
Out[44]: True

