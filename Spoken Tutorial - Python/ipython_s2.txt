
C:\Users\ojasa>ipython3
Python 3.9.7 (tags/v3.9.7:1016ef3, Aug 30 2021, 20:19:38) [MSC v.1929 64 bit (AMD64)]
Type 'copyright', 'credits' or 'license' for more information
IPython 8.0.1 -- An enhanced Interactive Python. Type '?' for help.

In [1]: %pylab
Using matplotlib backend: TkAgg
%pylab is deprecated, use %matplotlib inline and import the required libraries.
Populating the interactive namespace from numpy and matplotlib

In [2]: linspace?
Signature:
linspace(
    start,
    stop,
    num=50,
    endpoint=True,
    retstep=False,
    dtype=None,
    axis=0,
)
Docstring:
Return evenly spaced numbers over a specified interval.

Returns `num` evenly spaced samples, calculated over the
interval [`start`, `stop`].

The endpoint of the interval can optionally be excluded.

.. versionchanged:: 1.16.0
    Non-scalar `start` and `stop` are now supported.

.. versionchanged:: 1.20.0
    Values are rounded towards ``-inf`` instead of ``0`` when an
    integer ``dtype`` is specified. The old behavior can
    still be obtained with ``np.linspace(start, stop, num).astype(int)``

Parameters
----------
start : array_like

In [3]: linspace(1,10,10)
Out[3]: array([ 1.,  2.,  3.,  4.,  5.,  6.,  7.,  8.,  9., 10.])

In [4]: linspace(0, 1, 20),
Out[4]:
(array([0.        , 0.05263158, 0.10526316, 0.15789474, 0.21052632,
        0.26315789, 0.31578947, 0.36842105, 0.42105263, 0.47368421,
        0.52631579, 0.57894737, 0.63157895, 0.68421053, 0.73684211,
        0.78947368, 0.84210526, 0.89473684, 0.94736842, 1.        ]),)

In [5]: t = linspace(-pi, pi, 100)

In [6]: len(t)
Out[6]: 100

In [7]: plot(t, cos(t))
Out[7]: [<matplotlib.lines.Line2D at 0x2199adef8e0>]

In [8]: cosine = cost
--------------------------------------------------------------------------
NameError                                Traceback (most recent call last)
Input In [8], in <module>
----> 1 cosine = cost

NameError: name 'cost' is not defined

In [9]: cosine = cos(t)

In [10]: plot(t, cosine)
Out[10]: [<matplotlib.lines.Line2D at 0x2199de5d640>]

In [11]: clf()

In [12]: plot(t, sin(t))
Out[12]: [<matplotlib.lines.Line2D at 0x2199fc32be0>]

Exercise
In [19]: x = linspace(-pi, pi, 100)

In [20]: e = sin(x) * sin(x) / x

In [21]: plot(x, e)
Out[21]: [<matplotlib.lines.Line2D at 0x2199fb02070>]
